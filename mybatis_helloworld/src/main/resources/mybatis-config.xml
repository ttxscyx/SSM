<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
            MyBatis核心配置文件中，标签的顺序：
            properties?,settings?,typeAliases?,typeHandlers?,
            objectFactory?,objectWrapperFactory?,reflectorFactory?,
            plugins?,environments?,databaseIdProvider?,mappers?
        -->
    <!--引入properties文件此后就可以在当前文件中使用的方式访问value-->
    <properties resource="jdbc.properties"/>
    <!--
           typeAlias:设置类型别名，即为某个具体的类型设置一个别名
           在MyBatis的范围中，就可以使用别名表示一个具体的类型
           -->
    <typeAliases>
        <!--
        type：设置需要起别名的类型
        alias：设置某个类型的别名
        -->
        <!-- <typeAlias type="com.cyx.mybatis.pojo.User" alias="abc"></typeAlias>-->
        <!--若不设置alias，当前的类型拥有默认的别名，即类名且不区分大小写-->
        <!--<typeAlias type="com.cyx.mybatis.pojo.User"></typeAlias>-->
        <!--通过包设置类型别名，指定包下所有的类型将全部拥有默认的别名，即类名且不区分大小写-->
        <package name="com.cyx.mybatis.pojo"/>

    </typeAliases>
    <!--
            environments：配置多个连接数据库的环境
            属性：
            default：设置默认使用的环境的id
        -->
    <environments default="development">
        <!--
           environment：配置某个具体的环境
           属性：
           id：表示连接数据库的环境的唯一标识，不能重复
       -->
        <environment id="development">
            <!--
                           transactionManager：设置事务管理方式
                           属性：
                           type="JDBC|MANAGED"
                           JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事
                           务的提交或回滚需要手动处理
                           MANAGED：被管理，例如Spring
             -->
            <transactionManager type="JDBC"/>
            <!--
                            dataSource：配置数据源
                            属性：
                            type：设置数据源的类型
                            type="POOLED|UNPOOLED|JNDI"
                            POOLED：表示使用数据库连接池缓存数据库连接
                            UNPOOLED：表示不使用数据库连接池
                            JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <!--设置连接数据库的驱动-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--设置连接数据库的连接地址-->
                <property name="url" value="${jdbc.url}"/>
                <!--设置连接数据库的用户名-->
                <property name="username" value="${jdbc.username}"/>
                <!--设置连接数据库的密码-->
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="test">

            <transactionManager type="JDBC"/>

            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/springbootmybatis?characterEncoding=UTF-8"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>

    </environments>

    <!--引入映射文件-->
    <mappers>
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--
        以包的方式引入映射文件，但是必须满足两个条件：
        1、mapper接口和映射文件所在的包必须一致
        2、mapper接口的名字和映射文件的名字必须一致
        -->
        <package name="com.cyx.mybatis.mapper"/>
    </mappers>

</configuration>